! HEATHROW CMS -  FIRE MAIN BACKUP

loaded by: FIRE_MAIN

!

load mimic_libutil

type b_db_row_type = table db_elements(db_addr,b_value)

type alarm_row_type =  db_elements(db_addr,alarm_status)


!
******************************************************************
* SET B VALUE                                                    *
* This object writes the value of a boolean from a given server. *
******************************************************************
!

object set_b_value(db_addr=db_address,src=source,val=onoff)
var output op=b_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.b_value = val
   set old_off op.b_value
   request op
   end
end

!
****************************************************************
* FIRE MAIN BACKUP OBJECT                                      *
* this object is called from the Top Level variable (mimic)    *
****************************************************************
!

object fire_main_backup(plc_offset=int,b_offset=int,c_offset=int,src=source,fg)

var pp1_height                     = int

var plca_comms_ip                  = input b_db_row_type
var plcb_comms_ip                  = input b_db_row_type

var title_text                     = loopback string(30)
var backup_status_text             = loopback string(30)
var pp1_status_text                = loopback string(30)
var backup_colour                  = loopback colour
var backup_alarm_background_colour = loopback colour
var valve_fg                       = loopback colour
var pp1_colour                     = loopback colour
 
var backup_status                  = input b_db_row_type
var backup_enable                  = input b_db_row_type
var backup_disable                 = input b_db_row_type
var backup_emer_stop               = input b_db_row_type
var backup_stopping                = input b_db_row_type
var pp1_running                    = input b_db_row_type
var start_stop_pp1                 = input b_db_row_type
var close_penstocks                = input b_db_row_type
var pen_opened                     = input b_db_row_type
var pen_closed                     = input b_db_row_type
var backup_operated_alarm          = input alarm_row_type

var backup_control_menu            = menu string(30)

begin

! REQUEST DATA FROM SERVER !

if invalid get source backup_status then 

   begin

   set source backup_status = src
   set filter backup_status.db_addr = lim_eq
   set limit backup_status.db_addr = db_address(int(b1) + b_offset - 1)
   set persist backup_status 
   request backup_status

   set source backup_enable = src
   set filter backup_enable.db_addr = lim_eq
   set limit backup_enable.db_addr = db_address(int(b1) + b_offset)
   set persist backup_enable 
   request backup_enable

   set source backup_disable = src
   set filter backup_disable.db_addr = lim_eq
   set limit backup_disable.db_addr = db_address(int(b1) + b_offset + 1)
   set persist backup_disable 
   request backup_disable
   
   set source backup_emer_stop = src
   set filter backup_emer_stop.db_addr = lim_eq
   set limit backup_emer_stop.db_addr = db_address(int(b1) + b_offset + 2)
   set persist backup_emer_stop 
   request backup_emer_stop

   set source backup_operated_alarm = src
   set filter backup_operated_alarm.db_addr = lim_eq
   set limit backup_operated_alarm.db_addr = db_address(int(b1) + b_offset + 3)
   set persist backup_operated_alarm 
   request backup_operated_alarm

   set source backup_stopping = src
   set filter backup_stopping.db_addr = lim_eq
   set limit backup_stopping.db_addr = db_address(int(b1) + b_offset + 4)
   set persist backup_stopping 
   request backup_stopping

   set source start_stop_pp1 = src
   set filter start_stop_pp1.db_addr = lim_eq
   set limit start_stop_pp1.db_addr = db_address(int(b1) + b_offset + 5)
   set persist start_stop_pp1 
   request start_stop_pp1

   set source pp1_running = src
   set filter pp1_running.db_addr = lim_eq
   set limit pp1_running.db_addr = db_address(int(b1) + b_offset + 6)
   set persist pp1_running 
   request pp1_running

   set source close_penstocks = src
   set filter close_penstocks.db_addr = lim_eq
   set limit close_penstocks.db_addr = db_address(int(b1) + b_offset + 7)
   set persist close_penstocks 
   request close_penstocks

   set source pen_opened = src
   set filter pen_opened.db_addr = lim_eq
   set limit pen_opened.db_addr = db_address(int(b1) + b_offset + 8)
   set persist pen_opened 
   request pen_opened

   set source pen_closed = src
   set filter pen_closed.db_addr = lim_eq
   set limit pen_closed.db_addr = db_address(int(b1) + b_offset + 9)
   set persist pen_closed 
   request pen_closed

   set source plca_comms_ip = src
   set filter plca_comms_ip.db_addr = lim_eq
   set limit plca_comms_ip.db_addr = db_address(int(b1) + plc_offset - 1)
   set persist plca_comms_ip 
   request plca_comms_ip

   set source plcb_comms_ip = src
   set filter plcb_comms_ip.db_addr = lim_eq
   set limit plcb_comms_ip.db_addr = db_address(int(b1) + plc_offset )
   set persist plcb_comms_ip 
   request plcb_comms_ip

   end



! CONFIGURE MENU !

just=centreleft
w=210 h=60
x=-130 y=0
set rect backup_control_menu 
set title backup_control_menu = "Fire Main Backup Menu"
set remove backup_control_menu = "Enable Backup"
set remove backup_control_menu = "Disable Backup"
set remove backup_control_menu = "Normal Stop"
set remove backup_control_menu = "Start PP1"
set remove backup_control_menu = "Stop PP1"
set remove backup_control_menu = "Close Penstocks"


! CONTROL MENU !

if valid backup_control_menu then
begin
case backup_control_menu of 
   
  "Enable Backup"
    begin
      set title_text = "Enable Backup"
    end
  
  "Disable Backup"
    begin
      set title_text = "Disable Backup"
    end
   
  "Normal Stop"
    begin
      set title_text = "Normal Stop"
    end

  "Start PP1"
    begin
      set title_text = "Start PP1"
    end

  "Stop PP1"
    begin
      set title_text = "Stop PP1"
    end

  "Close Penstocks"
    begin
      set title_text = "Close Penstocks"
    end


   default
   begin
   end
   set invalid backup_control_menu
end


! SELECT TEXT BACKUP STATUS !

if plca_comms_ip.b_value and plcb_comms_ip.b_value then
   begin 
   backup_status_text ="Comms Failure"
   backup_colour = magenta
   backup_alarm_background_colour = decoroff
   end

else
begin

if backup_stopping.b_value == on then

   begin
   backup_status_text = "Stopping"
   backup_colour = flashred
   backup_alarm_background_colour = decoroff
   end

else if backup_operated_alarm.alarm_status == w_note then

   begin
   backup_status_text = "Pumps Running"
   backup_colour = white
   backup_alarm_background_colour = flashred
   end

else if backup_operated_alarm.alarm_status == w_clr then

   begin
   backup_status_text = "Pumps Running"
   backup_colour = white
   backup_alarm_background_colour = red
   end

else

   begin
      if backup_status.b_value == on then 
      begin
      backup_status_text = "Disabled"
      backup_colour = red
      backup_alarm_background_colour = decoroff
      end
  
      else
      begin
      backup_status_text = "Enabled"
      backup_colour = blue
      backup_alarm_background_colour = decoroff
      end
  
   end
end


! SET CONTROL MENU OPTIONS !
    
   set add backup_control_menu = "Enable Backup"      
   set add backup_control_menu = "Disable Backup"
   set add backup_control_menu = "Normal Stop"
   set add backup_control_menu = "Start PP1"
   set add backup_control_menu = "Stop PP1"
   set add backup_control_menu = "Close Penstocks" 


! SELECT TEXT PRESSURISING PUMP STATUS !

if plca_comms_ip.b_value and plcb_comms_ip.b_value then
   begin
   pp1_height = 10
   pp1_status_text ="PP1 Status Unknown"
   pp1_colour = magenta
   end

else
begin

if pp1_running.b_value == off then
   begin
   pp1_height = 13
   pp1_status_text = "PP1 Running"
   pp1_colour = green4
   end

else 
  begin
  pp1_height = 13
  pp1_status_text = "PP1 Stopped"
  pp1_colour = white
  end

end

! SELECT PENSTOCK VALVE FG COLOUR !

if plca_comms_ip.b_value and plcb_comms_ip.b_value then
  valve_fg = magenta

else
begin

if pen_opened.b_value == off and pen_closed.b_value == off then
  valve_fg = flashred

else if pen_opened.b_value == off then
  valve_fg = green4

else if pen_closed.b_value == off then
  valve_fg = white

else
  valve_fg = red

end

! DRAW SYMBOL !

bg=decoroff
fg=valve_fg
just = centrecentre
x = -103 rect (w=54,h=60,fg=bg)
x -= 27 y += 30 add
y -= 60 add
x += 54 add line (fg=decorlight) clear 
y += 60 add
x -= 54 add line (fg=decorshadow) clear

if plca_comms_ip.b_value and plcb_comms_ip.b_value then
   begin
   lw=1
   x = -93 y = -7 add
   x = -107 y = 7 add line clear
   x = -93 y = -5 add
   x -= 4 y -= 4 add
   x += 6 add
   y += 6 add
   x -= 4 y -= 4 add
   fill clear
   x = -105 y = 7 add
   x -= 4 y -= 4 add
   y += 6 add
   x += 6 add
   x -= 4 y -= 4 add
   fill clear
   lw=2
   x = -100 y = 0
   circle (w=30,h=30)
   y -= 23
   ch =10
   tfg = black
   x -= 2 text ("Penstocks")
   ch =10
   tfg = magenta
   y += 45  text (ch=9,"UNKNOWN")
   end

else
begin

if pen_opened.b_value == off and pen_closed.b_value then
   begin
      lw=1
      x = -100 y = -10 add
      y += 20 add line clear
      x = -100 y = -9 add
      x -= 4 add
      x += 4 y -= 6 add
      x += 4 y += 6 add
      x -= 4 add
      fill clear
      x = -100 y = 8 add
      x -= 4 add
      x += 4 y += 6 add
      x += 4 y -= 6 add
      x -= 4 add
      fill clear
      lw=2
      x = -100 y = 0
      circle (w=30,h=30)
      y -= 23
  
   ch =10
   tfg = black
   x -= 2 text ("Penstocks")
   ch =10
   y += 45  text ("OPENED")
   clear
   end

else if pen_opened.b_value and pen_closed.b_value == off then
   begin

      
      lw=1
      x = -110 y = 0 add
      x += 20 add line clear
      x = -110 y = 0 add
      y -= 4 add    
      x -= 6 y += 4 add
      x += 6 y += 4 add
      y -= 4 add 
      fill clear
      x = -92 y = 0 add
      y -= 4 add    
      x += 6 y += 4 add
      x -= 6 y += 4 add
      y -= 4 add
      fill clear
      lw=2
      x = -100 y = 0
      circle (w=30,h=30)
      y -= 23
     
   ch =10
   tfg = black
   x -= 2 text ("Penstocks")
   ch =10
   y +=45  text ("CLOSED")

   end

else if pen_opened.b_value and pen_closed.b_value then
   begin
   lw=1
   x = -93 y = -7 add
   x = -107 y = 7 add line clear
   x = -93 y = -5 add
   x -= 4 y -= 4 add
   x += 6 add
   y += 6 add
   x -= 4 y -= 4 add
   fill clear
   x = -105 y = 7 add
   x -= 4 y -= 4 add
   y += 6 add
   x += 6 add
   x -= 4 y -= 4 add
   fill clear
   lw=2
   x = -100 y = 0
   circle (w=30,h=30)
   y -= 23
   ch =10
   tfg = black
   x -= 2 text ("Penstocks")
   ch =10
   y += 45  text ("TRAVEL")
   end

else if pen_opened.b_value == off and pen_opened.b_value == off then
   begin
   lw=2
   x = -100 y = 0
   circle (w=30,h=30)
   ch = 20 
   text ("?")
   y -= 23
   
   ch =10
   tfg = black
   x -= 2 text ("Penstocks")
   ch =10
   y += 45  text ("ERROR")
   end

end

just = centrecentre
x = 0 y = 0 rect(w=150,h=60,fg=decoroff)
x += 75 y -= 30 add y += 60 add x -= 150 add line(lw=1,fg=decorshadow) clear
y = 30 add y -= 60 add x += 150 add line(lw=1,fg=decorlight) clear
x = 0 y = -20 text(title_text,ch=16,tfg=black)


if title_text == "Enable Backup" then
   begin 
      just=centrecentre
      x = -65 y = 0 command_button("Cancel","",60,"",ch=14)
      x = -35 y = 10 if anyb(w=60,h=20) then
      begin
      set title_text = "Fire Main Backup"
      end
      clear
      x = 5 y = 0 command_button("Confirm","",60,"",ch=14)
      x = 35 y = 10 if anyb(w=60,h=20) then     
      begin
      set_b_value(db_address(int(b1) + b_offset + 2), src, off)      
      set_b_value(db_address(int(b1) + b_offset + 1), src, off)
      set_b_value(db_address(int(b1) + b_offset), src, on)
      set title_text = "Fire Main Backup"
      clear

      end
   end

else if title_text == "Disable Backup" then
   begin
     
      x = -65 y = 0 command_button("Cancel","",60,"",ch=14)
      x = -35 y = 10 if anyb(w=60,h=20) then
      begin
      set title_text = "Fire Main Backup"
      end
      clear
      x = 5 y = 0 command_button("Confirm","",60,"",ch=14)
      x = 35 y = 10 if anyb(w=60,h=20) then
      begin
      set_b_value(db_address(int(b1) + b_offset + 2), src, off)
      set_b_value(db_address(int(b1) + b_offset), src, off)
      set_b_value(db_address(int(b1) + b_offset + 1), src, on)
      title_text = "Fire Main Backup"
      clear      
      end
   end

else if title_text == "Normal Stop" then
  
   begin
     
      x = -65 y = 0 command_button("Cancel","",60,"",ch=14)
      x = -35 y = 10 if anyb(w=60,h=20) then
      begin 
      set title_text = "Fire Main Backup"
      end

      clear
      x = 5 y = 0 command_button("Confirm","",60,"",ch=14)
      x = 35 y = 10 if anyb(w=60,h=20) then
      begin
      
      set_b_value(db_address(int(b1) + b_offset + 1), src, off)
      set_b_value(db_address(int(b1) + b_offset), src, off)
      set_b_value(db_address(int(b1) + b_offset + 2), src, on)
      title_text = "Fire Main Backup"
      clear
      
      end
   end

else if title_text == "Start PP1" then
   begin
     set_b_value(db_address(int(b1) + b_offset + 5), src, on)
     title_text = "Fire Main Backup"
     clear
   end

else if title_text == "Stop PP1" then
   begin
     set_b_value(db_address(int(b1) + b_offset + 5), src, off)
     title_text = "Fire Main Backup"
     clear
   end

else if title_text == "Close Penstocks" then
  
   begin
     
      x = -65 y = 0 command_button("Cancel","",60,"",ch=14)
      x = -35 y = 10 if anyb(w=60,h=20) then
      begin 
      set title_text = "Fire Main Backup"
      end

      clear
      x = 5 y = 0 command_button("Confirm","",60,"",ch=14)
      x = 35 y = 10 if anyb(w=60,h=20) then
      begin
      set_b_value(db_address(int(b1) + b_offset + 7), src, on)
      title_text = "Fire Main Backup"
      clear
      
      end
   end

else
   begin
   x = 0 y = -2 rect(w=130,h=18,fg=backup_alarm_background_colour)
   x = -65 y = 7 add x += 130 add y -= 18 add line(lw=1,fg=decorlight) clear 
   y = -11 add x -= 130 add y += 18 add line(lw=1,fg=decorshadow) clear
   x = 0 y = -1 text(backup_status_text,ch=18,tfg=backup_colour) clear
   
   x = -65 y = 27 add x += 130 add y -= 15 add line(lw=1,fg=decorlight) clear 
   y = 12 add x -= 130 add y += 15 add line(lw=1,fg=decorshadow) clear
   x = 0 y = 19 text(font=font_bold,
                     pp1_status_text,ch=pp1_height,tfg=pp1_colour) clear


   if invalid backup_control_menu then
   title_text = "Fire Main Backup"
   
   end


end


object main_object (bg,fg,w,h,tbg,tfg)

begin

scale = 256

x = 0 y = 0 fire_main_backup(16000,16200,810,heathrow) 
end

mimic = main_object w=300,h=200,just=centrecentre,fg=white,bg=black,resizable
