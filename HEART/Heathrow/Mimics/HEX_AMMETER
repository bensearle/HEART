! HEATHROW CMS - AMMETER 
 
loaded by: SUB_STN_114, SUB_STN_115, SUB_STN_116
!

load mimic_libutil
type alarm_row_type =  db_elements(db_addr,alarm_status)

type e_db_row_type =  db_elements(db_addr,e_value)

type e_test_row =  db_alarm_config(db_addr,
					   config_number,
					   test_value)

type e_test_table =  e_test_row[6]

type c_db_row_type =  db_elements(db_addr,c_value)
!
******************************************************************
* SET C VALUE                                                    *
* This object writes the vaLue of a char from a given server.    *
******************************************************************
!

object set_c_value(db_addr=db_address,src=source,val=string)
var op = output c_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.c_value = val
   set old_off op.c_value
   request op
   end
end

helptext hex_ammeter_object_help = "\t\tHEX AMMETER - GENERIC HELP\n
There is no help for this particular meter.\nThis is the generic help for a meter on the Heathrow Express substations (sub 114, 115 and 116).\n
"

!
************************************************************
* AMMETER OBJECT                                           *
* this object is called by the Top Level variable (mimic). *
************************************************************
!

object hex_ammeter(e_offset=int,tag_address=string,src=source,min_range=real,max_range=real, units=string(6), meter_name=string, helpname=string(30),realf)

var help_area = help string_30

var meter_ip = input db_elements (e_value, alarm_status)
var tag_message_ip = input db_elements (c_value)
var input_setpoint = input  e_test_table

var output_setpoint = output  e_test_table

var main_menu = menu  string
var high_setpoint_panel = panel int
var low_setpoint_panel = panel int
var tag_message_panel = panel string

var slope = real
var offset = real

begin
! INITIALISATION !
! REQUEST ENGINEERINGS FROM SCOPE !

if invalid get source meter_ip then 
   begin

   set source meter_ip = src
   set filter meter_ip.db_addr = lim_eq
   set limit meter_ip.db_addr = db_address("E" + e_offset)
   set persist meter_ip 
   request meter_ip

   set source    input_setpoint = src
   set filter    input_setpoint.db_addr = lim_eq
   set limit     input_setpoint.db_addr = db_address("E" + e_offset)
   set mayexist  input_setpoint
   set mustexist input_setpoint.db_addr
   set mustexist input_setpoint.config_number
   set persist   input_setpoint
   request       input_setpoint

!REQUEST TAG MESSAGE FROM SCOPE!

   set source tag_message_ip = src
   set filter tag_message_ip.db_addr = lim_eq
   set limit tag_message_ip.db_addr = db_address("C"+tag_address)
   set persist tag_message_ip
   request tag_message_ip

   end



! DRAW METER !

if tag_message_ip.c_value <> "" then
   fg = yellow2
else
   fg = decoroff

just = centrecentre
h = 160 w = 80
x = 0 y = 0 rect
x = -w/2 y = h/2 
move y -= h add x += w add line(fg=fg-1)
move y += h add x -= w add line(fg=fg+2)

h -= 50 w -= 10 fg = decoroff
x = 0 y = 0 rect
x = -w/2 y = h/2 
move y -= h add x += w add line(fg=fg-1) 
move y += h add x -= w add line(fg=fg+2)

h -= 14 ch = 12
if valid meter_ip.e_value then
   tfg = black
else
   tfg = grey60
fg = tfg
! display  y axis values !
x = -2  y=h/2 move
y = h/2 text (min_range, just=centreright)
rect (h=1, w=6, just=centreleft)
y = h/4 text (min_range + (max_range-min_range) * 0.25, just=centreright)
rect (h=1, w=6, just=centreleft)
y = 0 text (min_range + (max_range-min_range) * 0.5, just=centreright)
rect (h=1, w=6, just=centreleft)
y = -h/4 text (min_range + (max_range-min_range) * 0.75, just=centreright)
rect (h=1, w=6, just=centreleft)
y = -h/2 text (max_range, just=centreright)
rect (h=1, w=6, just=centreleft)
add line(lw=2)
! display title & units !
y = -68 x = 0 text(ch=16,meter_name)
y = 68  x = 0 text(ch=16,meter_ip.e_value+" "+ units)

! SELECT BAR COLOUR !
if meter_ip.e_value < 0 then fg = green else fg = yellow

! CALCULATE BAR SCALING !
! use formula y = mx + c where
	m = (48 - -48)/(min_range - max_range)	: stored in slope
	c = 48 - m * min_range			: stored in offset
!
slope = 96/(min_range - max_range)
offset = 48 - slope * min_range

! DRAW BAR !
x = 16
if offset >= 48 then
   y = 48
else
   y = int(offset)
move

if valid meter_ip.e_value then
   y = int(slope * meter_ip.e_value + offset)

if y > 48 then y = 48
if y < -48 then y = -48

! IF ALARM HAS BEEN ACCEPTED DRAW BAR IN RED !
if meter_ip.alarm_status == w_clr then
   fg = red

! IF ALARM IS UNACCEPTED DRAW FULL HEIGHT FLASHING BAR!
if meter_ip.alarm_status == w_note then
   begin
   y = 48 move y = - 48 add
   fg = flashred
   end

add line(lw=20)  ! THE BAR !!!

! BEZEL !
fg = decoroff
x = 5 y = h/2 w = 20
move y -= h add x += w add line(fg=fg+2)
move y += h add x -= w add line(fg=fg-1)

! CONFIGURE MENU !

x=0 y=0 w=80 h=160 just = centrecentre
set rect main_menu
if valid input_setpoint then
   set title main_menu = "High = "+ input_setpoint[1].test_value +"  Low = " +input_setpoint[2].test_value
set empty main_menu
set add main_menu = "Alter High Alarm Level"
set add main_menu = "Alter Low Alarm Level"
set add main_menu = "Alter Tag Message"
set add main_menu = "Clear Tag Message"

! RESPOND TO MENU SELECTIONS !

if valid main_menu then
   begin

   case main_menu of
     "Alter High Alarm Level"
        begin
        set title high_setpoint_panel = "Alter High Alarm Level"
        set unpinned high_setpoint_panel
        request high_setpoint_panel
        end

     "Alter Low Alarm Level"
        begin
        set title low_setpoint_panel = "Alter Low Alarm Level"
        set unpinned low_setpoint_panel
        request low_setpoint_panel
        end

      "Alter Tag Message"
         begin
	 set reset tag_message_panel
         set title tag_message_panel = "Modify Tag Message for " + meter_name
         set label tag_message_panel = ""
	 set width tag_message_panel = 40
         set value tag_message_panel = tag_message_ip.c_value
         set unpinned tag_message_panel
         request tag_message_panel
         end

      "Clear Tag Message"
         begin
         set_c_value(db_address("C"+tag_address), src, "")
         end

        default
            begin
            end

   set invalid main_menu
   end

! WRITE NEW ALARM LEVELS TO SERVER !
! The new high setpoint must be above the current low setpoint !
! The new low setpoint must be below the current high setpoint !

if valid high_setpoint_panel and high_setpoint_panel > input_setpoint[2].test_value then
   begin
   set source output_setpoint = src
   set old_value output_setpoint = input_setpoint
   set value output_setpoint = input_setpoint
   set value output_setpoint[1].test_value = high_setpoint_panel
   request output_setpoint
   set invalid high_setpoint_panel
   end

if valid low_setpoint_panel and low_setpoint_panel < input_setpoint[1].test_value then 
   begin
   set source output_setpoint = src
   set old_value output_setpoint = input_setpoint
   set value output_setpoint = input_setpoint
   set value output_setpoint[2].test_value = low_setpoint_panel
   request output_setpoint
   set invalid low_setpoint_panel
   end

! WRITE NEW TAG MESSAGE TO SCOPE !

if valid tag_message_panel then
   begin
   set_c_value(db_address("C"+tag_address),src,tag_message_panel)
   set invalid tag_message_panel
   end

! DISPLAY TAG MESSAGE PANEL IF SELB PRESSED!

if selb and tag_message_ip.c_value <> "" and not get busy tag_message_panel then
   begin
   set reset tag_message_panel
   set width tag_message_panel = 40
   set noedit tag_message_panel
   set title tag_message_panel = "Tag Message for " + meter_name
   set value tag_message_panel = tag_message_ip.c_value
   set label tag_message_panel = ""
   set pinned tag_message_panel
   request tag_message_panel
   end

! HELP !
if helpname <> "" then
   set text help_area = helpname
else
   set text help_area = "hex_ammeter_object_help"


end



object main_object (bg,fg,w,h,tbg,tfg)
begin
scale=200
realf = fixed0
x = -150 hex_ammeter(2401,69,heathrow,0,400,"A","TX 1","")
x = -60 hex_ammeter(2402,335,heathrow,-400,400,"A","BS 1/2","")
x = 20 hex_ammeter(0,348,heathrow,0,800,"A","FAN N2","")
realf = fixed2
x = 110 hex_ammeter(2400,335,heathrow,9.35,12.65,"kV","BS 1","")

! Exit button !
scale = 256
x=10 y = 150  h = 20  w= 120 fg = red2
rect (fg=fg-1) x ++ y++ h -- w--
rect (fg=fg+2) h-- w--
rect(fg= fg +selb) tfg = white
text ("Exit")
if selb then exit
end

mimic = main_object w=400,h=400,just=centrecentre,fg=white,bg=grey80,resizable
