load mimic_libutil
load gadgets_libutil
load fp_generic_server_request

!
************************************************************
* OCB ALARM TEST                                           *
* this object checks to see if an OCB is in alarm    *
************************************************************
!

object fp_sub_alarm(plc_offset=int,b_offset=int,src=source)=int
var sub_status = int

!PLC TYPE INPUTS !  
var plc_ab_comms_fail_ip = input    b_bool_type[2]
var plc_cancel_ip = input    b_bool_type
 
! 10 ALARM INPUTS !
var ocb_alarms = input alarm_row_type[10]
begin
	if invalid get source plc_ab_comms_fail_ip then 
	   begin

	   !PLC TYPE REQUESTS!
	
	   set source plc_ab_comms_fail_ip = src
	   set filter plc_ab_comms_fail_ip.db_addr = lim_ge
	   set limit plc_ab_comms_fail_ip.db_addr = db_address(int(b1) + plc_offset-1 )
	   set priority plc_ab_comms_fail_ip.db_addr = 15
	   set persist plc_ab_comms_fail_ip 
	   set mayexist plc_ab_comms_fail_ip
	   request plc_ab_comms_fail_ip

	   !OCB REQUESTS!

	   set source ocb_alarms = src
	   set filter ocb_alarms.db_addr = lim_ge
	   set limit ocb_alarms.db_addr = db_address(int(b1) + b_offset-1)
	   set priority ocb_alarms.db_addr = 15
	   set persist ocb_alarms 
	   set mayexist ocb_alarms
	   request ocb_alarms
	end


	if plc_ab_comms_fail_ip[1].b_value and plc_ab_comms_fail_ip[2].b_value then
		sub_status = 1

	else if ocb_alarms[1].alarm_status == w_note or
	ocb_alarms[2].alarm_status == w_note or
	ocb_alarms[3].alarm_status == w_note or
	ocb_alarms[4].alarm_status == w_note or
	ocb_alarms[5].alarm_status == w_note or
	ocb_alarms[6].alarm_status == w_note or
	ocb_alarms[7].alarm_status == w_note or
	ocb_alarms[8].alarm_status == w_note or
	ocb_alarms[9].alarm_status == w_note or
	ocb_alarms[10].alarm_status == w_note then
		sub_status = 2

	else if ocb_alarms[1].alarm_status == w_clr or
	ocb_alarms[2].alarm_status == w_clr or
	ocb_alarms[3].alarm_status == w_clr or
	ocb_alarms[4].alarm_status == w_clr or
	ocb_alarms[5].alarm_status == w_clr or
	ocb_alarms[6].alarm_status == w_clr or
	ocb_alarms[7].alarm_status == w_clr or
	ocb_alarms[8].alarm_status == w_clr or
	ocb_alarms[9].alarm_status == w_clr or
	ocb_alarms[10].alarm_status == w_clr then       
		sub_status = 3

	else
		sub_status = 0

fp_sub_alarm = sub_status
end


!*controllable circuit breakers alarm tests*!
object fp_sub_ctrl_alarm(plc_offset=int,b_offset=int,src=source)=int
var sub_status = int

!PLC TYPE INPUTS !  
var plc_ab_comms_fail_ip = input    b_bool_type[2]
var plc_cancel_ip = input    b_bool_type
 
! 20 ALARM INPUTS !

var ocb_alarms = input alarm_row_type[20]

begin

if invalid get source plc_ab_comms_fail_ip then 
   begin

!PLC TYPE REQUESTS!

   set source plc_ab_comms_fail_ip = src
   set filter plc_ab_comms_fail_ip.db_addr = lim_ge
   set limit plc_ab_comms_fail_ip.db_addr = db_address(int(b1) + plc_offset-1 )
   set priority plc_ab_comms_fail_ip.db_addr = 15
   set persist plc_ab_comms_fail_ip 
   set mayexist plc_ab_comms_fail_ip
   request plc_ab_comms_fail_ip

!OCB REQUESTS!

   set source ocb_alarms = src
   set filter ocb_alarms.db_addr = lim_ge
   set limit ocb_alarms.db_addr = db_address(int(b1) + b_offset -1)
   set priority ocb_alarms.db_addr = 15
   set persist ocb_alarms 
   set mayexist ocb_alarms
   request ocb_alarms

end


if plc_ab_comms_fail_ip[1].b_value and plc_ab_comms_fail_ip[2].b_value then

    sub_status = 1

else if ocb_alarms[1].alarm_status == w_note or
        ocb_alarms[2].alarm_status == w_note or
        ocb_alarms[3].alarm_status == w_note or
        ocb_alarms[4].alarm_status == w_note or
        ocb_alarms[5].alarm_status == w_note or
        ocb_alarms[6].alarm_status == w_note or
        ocb_alarms[7].alarm_status == w_note or
        ocb_alarms[8].alarm_status == w_note or
        ocb_alarms[9].alarm_status == w_note or
        ocb_alarms[10].alarm_status == w_note or
        ocb_alarms[11].alarm_status == w_note or
        ocb_alarms[12].alarm_status == w_note or
        ocb_alarms[13].alarm_status == w_note or
        ocb_alarms[14].alarm_status == w_note or
        ocb_alarms[15].alarm_status == w_note or
        ocb_alarms[16].alarm_status == w_note or
        ocb_alarms[17].alarm_status == w_note or
        ocb_alarms[18].alarm_status == w_note or
        ocb_alarms[19].alarm_status == w_note or
        ocb_alarms[20].alarm_status == w_note then
            sub_status = 2

else if ocb_alarms[1].alarm_status == w_clr or
        ocb_alarms[2].alarm_status == w_clr or
        ocb_alarms[3].alarm_status == w_clr or
        ocb_alarms[4].alarm_status == w_clr or
        ocb_alarms[5].alarm_status == w_clr or
        ocb_alarms[6].alarm_status == w_clr or
        ocb_alarms[7].alarm_status == w_clr or
        ocb_alarms[8].alarm_status == w_clr or
        ocb_alarms[9].alarm_status == w_clr or
        ocb_alarms[10].alarm_status == w_clr or
        ocb_alarms[11].alarm_status == w_clr or
        ocb_alarms[12].alarm_status == w_clr or
        ocb_alarms[13].alarm_status == w_clr or
        ocb_alarms[14].alarm_status == w_clr or
        ocb_alarms[15].alarm_status == w_clr or
        ocb_alarms[16].alarm_status == w_clr or
        ocb_alarms[17].alarm_status == w_clr or
        ocb_alarms[18].alarm_status == w_clr or
        ocb_alarms[19].alarm_status == w_clr or
        ocb_alarms[20].alarm_status == w_clr then    
	    sub_status = 3
else
     sub_status = 0

	fp_sub_ctrl_alarm = sub_status
end


object main_object (bg,fg,w,h,tbg,tfg)
begin
end
mimic = main_object w=150,h=150,just=centrecentre,fg=white,bg=black,resizable

