load mimic_libutil

type b_db_row_type =  db_elements(db_addr,b_value)

type c_db_row_type = db_elements(db_addr,c_value)

type alarm_row_type =  db_elements(alarm_status)

!
******************************************************************
* SET B VALUE                                                    *
* This object writes the value of a boolean from a given server. *
******************************************************************
!

object set_b_value(db_addr=db_address,src=source,val=onoff)
var op = output  b_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.b_value = val
   set old_off op.b_value
   request op
   end
end

!
************************************************************
* OCB ALARM TEST                                           *
* this object checks to see if an OCB is in alarm          *
************************************************************
!

object ocb_note_alarm(b_offset=int,src=source)=int


var ocb_note_status = int

!ALARMS!

var ocb_closed_alarm = input  alarm_row_type
var ocb_tripped_alarm = input  alarm_row_type
var failed_to_trip_alarm = input  alarm_row_type
var failed_to_close_alarm = input  alarm_row_type

begin

if invalid get source ocb_closed_alarm or ocb_tripped_alarm then
   begin

! OCB REQUESTS !

   set source ocb_closed_alarm = src
   set filter ocb_closed_alarm.db_addr = lim_eq
   set limit ocb_closed_alarm.db_addr = db_address(int(b1) + b_offset +1)
   set persist ocb_closed_alarm 
   request ocb_closed_alarm

   set source ocb_tripped_alarm = src
   set filter ocb_tripped_alarm.db_addr = lim_eq
   set limit ocb_tripped_alarm.db_addr = db_address(int(b1) + b_offset +2)
   set persist ocb_tripped_alarm 
   request ocb_tripped_alarm

   set source failed_to_close_alarm = src
   set filter failed_to_close_alarm.db_addr = lim_eq
   set limit failed_to_close_alarm.db_addr = db_address(int(b1) + b_offset +3)
   set persist failed_to_close_alarm 
   request failed_to_close_alarm

   set source failed_to_trip_alarm = src
   set filter failed_to_trip_alarm.db_addr = lim_eq
   set limit failed_to_trip_alarm.db_addr = db_address(int(b1) + b_offset +4)
   set persist failed_to_trip_alarm 
   request failed_to_trip_alarm

   end

if      ocb_closed_alarm.alarm_status == w_note or
        ocb_tripped_alarm.alarm_status == w_note or
        failed_to_close_alarm.alarm_status == w_note or
        failed_to_trip_alarm.alarm_status == w_note then

             ocb_note_status = 1

else 
             ocb_note_status = 0

ocb_note_alarm = ocb_note_status

end

object main_object (bg,fg,w,h,tbg,tfg)
begin
end

mimic = main_object w=800,h=540,just=centrecentre,fg=white,bg=black,resizable
