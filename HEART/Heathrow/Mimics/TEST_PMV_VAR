load mimic_libutil
! HEATHROW CMS - PMV VARIABLE

loaded by: FIRE_MAIN
!

load mimic_libutil

type b_db_row_type =  db_elements(db_addr,b_value)

type c_db_row_type = db_elements(db_addr,c_value)

type e_db_row_type = db_elements(db_addr,e_value)

type alarm_row_type =  db_elements(db_addr,alarm_status)

type panel_item_row = table (str=string(20))

type valve_per = enum(p0="Closed",p5="5%",p10="10%",p15="15%",
                      p20="20%",p25="25%",p30="30%",p35="35%",p40="40%",
                      p45="45%",p50="50%",p55="55%",p60="60%",
                      p65="65%",p70="70%",p75="75%",p80="80%",
                      p85="85%",p90="90%",p95="95%",p100="Open")

!
******************************************************************
* SET B VALUE                                                    *
* This object writes the value of a boolean from a given server. *
******************************************************************
!

object set_b_value(db_addr=db_address,src=source,val=onoff)
var op = output b_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.b_value = val
   set old_off op.b_value
   request op
   end
end

!
******************************************************************
* SET C VALUE                                                    *
* This object writes the vaLue of a char from a given server.    *
******************************************************************
!

object set_c_value(db_addr=db_address,src=source,val=string)
var op = output c_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.c_value = val
   set old_off op.c_value
   request op
   end
end


!
******************************************************************
* SET E VALUE                                                    *
* This object writes the vaLue of a real from a given server.    *
******************************************************************
!

object set_e_value(db_addr=db_address,src=source,val=real)
var op = output e_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.e_value = val
   set old_off op.e_value
   request op
   end
end

!
***************************************
* MESSAGE TEXT                        *
* This object displays a tag message. *
***************************************
!

object mss_o(fg,bg,just,tag_mess=string)
begin
y=-10text ("*** Tag Message ***")
y=10 text (tag_mess)

end

mimic mss_m = mss_o just=centrecentre,w=300,h=50,bg=decoroff

object message_text_box(fg,bg,lw,just,tag_mess=string)
var mss = popup  mss_m
begin
set title mss= "Message"
request mss(tag_mess)
end
 
!
************************************************************
* POTABLE MOTORISED VALVE VARIABLE POSITION OBJECT         *
* this object is called by the Top Level variable (mimic). *
************************************************************
!

object test_var_pmv(fg,bg,plc_offset=int,b_offset=int,
           c_offset=int,real_offset=int,failed_offset=int,
           src=source,rot_angle=string(1),ident=string)


! INPUTS!
VAR transfer_of_service_ip = input  b_db_row_type
VAR opened_ip = input  b_db_row_type
VAR closed_ip = input  b_db_row_type
VAR mains_failed_ip = input  b_db_row_type
VAR plca_comms_ip = input  b_db_row_type
VAR plcb_comms_ip = input  b_db_row_type
VAR tag_message_ip = input  c_db_row_type
VAR open_percent_op = input  e_db_row_type
VAR real_percent_ip = input  e_db_row_type
!VAR input valve_failed_ip = b_db_row_type!

! ALARMS !
VAR mains_alarm_ip = input  alarm_row_type
VAR opened_n_closed_alarm = input  alarm_row_type
VAR closed_n_opened_alarm = input  alarm_row_type
VAR open_discr_ip = input  alarm_row_type
VAR closed_discr_ip = input  alarm_row_type
VAR open_percent_discr_ip = input  alarm_row_type
VAR mains_fail_discr_ip = input  alarm_row_type
VAR failed_to_close = input  alarm_row_type
VAR failed_to_open = input  alarm_row_type
VAR valve_failed_ip = input  alarm_row_type

! LOOPBACKS !
VAR valve_bg = loopback  colour
VAR valve_fg = loopback  colour
VAR menu_count = loopback  int 

! MENUS !
VAR stand_control_menu = menu  string(80)

! PANELS !
VAR tag_message_panel = panel  panel_item_row
VAR valve_open_panel = panel  valve_per
begin

! INITIALISATION !
! REQUEST DATA FROM SERVER !

if invalid get source opened_ip then 
   begin

   set source valve_failed_ip = src
   set filter valve_failed_ip.db_addr = lim_eq
   set limit valve_failed_ip.db_addr = db_address(int(b1) + failed_offset!+1!)
   set persist valve_failed_ip 
   request valve_failed_ip


   set source transfer_of_service_ip = src
   set filter transfer_of_service_ip.db_addr = lim_eq
   set limit transfer_of_service_ip.db_addr = db_address(int(b1) + b_offset - 1)
   set persist transfer_of_service_ip 
   request transfer_of_service_ip

   set source opened_ip = src
   set filter opened_ip.db_addr = lim_eq
   set limit opened_ip.db_addr = db_address(int(b1) + b_offset)
   set persist opened_ip 
   request opened_ip

   set source closed_ip = src
   set filter closed_ip.db_addr = lim_eq
   set limit closed_ip.db_addr = db_address(int(b1) + b_offset + 1)
   set persist closed_ip 
   request closed_ip

   set source tag_message_ip = src
   set filter tag_message_ip.db_addr = lim_eq
   set limit tag_message_ip.db_addr = db_address(int(c1) + c_offset - 1)
   set persist tag_message_ip
   request tag_message_ip

   set source plca_comms_ip = src
   set filter plca_comms_ip.db_addr = lim_eq
   set limit plca_comms_ip.db_addr = db_address(int(b1) + plc_offset - 1)
   set persist plca_comms_ip 
   request plca_comms_ip

   set source plcb_comms_ip = src
   set filter plcb_comms_ip.db_addr = lim_eq
   set limit plcb_comms_ip.db_addr = db_address(int(b1) + plc_offset)
   set persist plcb_comms_ip 
   request plcb_comms_ip
  
   set source open_percent_op = src
   set filter open_percent_op.db_addr = lim_eq
   set limit open_percent_op.db_addr = db_address(int(e1) + real_offset - 1)
   set persist open_percent_op 
   request open_percent_op

   set source real_percent_ip = src
   set filter real_percent_ip.db_addr = lim_eq
   set limit real_percent_ip.db_addr = db_address(int(e1) + real_offset)
   set persist real_percent_ip 
   request real_percent_ip

   set source opened_n_closed_alarm = src
   set filter opened_n_closed_alarm.db_addr = lim_eq
   set limit opened_n_closed_alarm.db_addr = db_address(int(b1) + b_offset)
   set persist opened_n_closed_alarm 
   request opened_n_closed_alarm

   set source closed_n_opened_alarm = src
   set filter closed_n_opened_alarm.db_addr = lim_eq
   set limit closed_n_opened_alarm.db_addr = db_address(int(b1) + b_offset + 1)
   set persist closed_n_opened_alarm 
   request closed_n_opened_alarm

   set source mains_alarm_ip = src
   set filter mains_alarm_ip.db_addr = lim_eq
   set limit mains_alarm_ip.db_addr = db_address(int(b1) + b_offset + 2)
   set persist mains_alarm_ip 
   request mains_alarm_ip

!Added on 2-8-93!

   set source open_discr_ip = src
   set filter open_discr_ip.db_addr = lim_eq
   set limit open_discr_ip.db_addr = db_address(int(b1) + b_offset + 3)
   set persist open_discr_ip
   request open_discr_ip

   set source closed_discr_ip = src
   set filter closed_discr_ip.db_addr = lim_eq
   set limit closed_discr_ip.db_addr = db_address(int(b1) + b_offset + 4)
   set persist closed_discr_ip
   request closed_discr_ip

   set source open_percent_discr_ip = src
   set filter open_percent_discr_ip.db_addr = lim_eq
   set limit open_percent_discr_ip.db_addr = db_address(int(b1) + b_offset + 5)
   set persist open_percent_discr_ip
   request open_percent_discr_ip


   set source mains_fail_discr_ip = src
   set filter Mains_fail_discr_ip.db_addr = lim_eq
   set limit mains_fail_discr_ip.db_addr = db_address(int(b1) + b_offset + 6)
   set persist mains_fail_discr_ip
   request mains_fail_discr_ip

   set source failed_to_close = src
   set filter failed_to_close.db_addr = lim_eq
   set limit failed_to_close.db_addr = db_address(int(b1) + b_offset + 9)
   set persist failed_to_close
   request failed_to_close

   set source failed_to_open = src
   set filter failed_to_open.db_addr = lim_eq
   set limit failed_to_open.db_addr = db_address(int(b1) + b_offset + 10)
   set persist failed_to_open
   request failed_to_open

!stop!
   
   end


! SELECT VALVE BG COLOUR ! 

if transfer_of_service_ip.b_value then
  begin
  valve_bg = orange
  end

else if tag_message_ip.c_value <> "" then 
  begin
  valve_bg = yellow
  end

else
  valve_bg = decoroff     

! SELECT VALVE FG COLOUR !

if plca_comms_ip.b_value and plcb_comms_ip.b_value then
  begin
  valve_fg = magenta
  end

else if opened_n_closed_alarm.alarm_status == w_note or
        closed_n_opened_alarm.alarm_status == w_note or
        !Added 2-8-93!
        open_discr_ip.alarm_status == w_note or
        closed_discr_ip.alarm_status == w_note or
        open_percent_discr_ip.alarm_status == w_note or
        failed_to_close.alarm_status == w_note or
        failed_to_open.alarm_status == w_note or
        mains_fail_discr_ip.alarm_status == w_note or
        !stop!
        mains_alarm_ip.alarm_status == w_note or
        valve_failed_ip.alarm_status == w_note then

        valve_fg = flashred

else if opened_n_closed_alarm.alarm_status == w_clr or
        closed_n_opened_alarm.alarm_status == w_clr or
        !Added 2-8-93!
        open_discr_ip.alarm_status == w_clr or
        closed_discr_ip.alarm_status == w_clr or
 	open_percent_discr_ip.alarm_status == w_clr or
        failed_to_close.alarm_status == w_clr or
        failed_to_open.alarm_status == w_clr or
        mains_fail_discr_ip.alarm_status == w_clr or
        !stop!
        mains_alarm_ip.alarm_status == w_clr or
        valve_failed_ip.alarm_status ==w_clr then
        valve_fg = red

!Added 25-11-93!
!else if opened_ip.b_value and closed_ip.b_value==off then!

 else if opened_ip.b_value==off then
   valve_fg=green4
else
   valve_fg =green4


! TAG MESSAGE PANEL !

if valid tag_message_panel then
   begin
   set_c_value(db_address(int(c1) + c_offset -1),src,tag_message_panel.str)
   set invalid tag_message_panel
   end


! CONTROL MENU !

if valid stand_control_menu then
   begin
   case stand_control_menu of

      "Control Valve"
         begin
         set title valve_open_panel = "Control Valve"
         set unpinned valve_open_panel
         request valve_open_panel
         end

      "Alter Tagged Message"
         begin
         set title tag_message_panel = "Modify Tag Message"
         set label tag_message_panel.str = "Tag Message :"
         set unpinned tag_message_panel
         request tag_message_panel
         end

      "Clear Tagged Message"
         begin
         set_c_value(db_address(int(c1) + c_offset - 1), src, "")
         end

      "Alter Transfer of Service"
         begin
         if transfer_of_service_ip.b_value then
            set_b_value(db_address(int(b1) + b_offset - 1), src, off)
         else
            set_b_value(db_address(int(b1) + b_offset - 1), src, on)
         end
!
       "Open Valve"
          begin
          set_b_value(db_address(int(b1) + offset +3), src, on)
          set_b_value(db_address(int(b1) + offset +4), src, off)
          end

       "Close Valve"
          begin
          set_b_value(db_address(int(b1) + offset +3), src, off)
          set_b_value(db_address(int(b1) + offset +4), src, on)
          end
!
   default
      begin
      end
   set invalid stand_control_menu
   end


! VALVE STATUS PANEL !

if valid valve_open_panel then
   begin
   case valve_open_panel of

      p0
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 0)
         end

      p5
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 5)
         end

      p10
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 10)
         end

      p15
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 15)
         end

      p20
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 20)
         end

      p25
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 25)
         end

      p30
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 30)
         end

      p35
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 35)
         end

      p40
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 40)
         end

      p45
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 45)
         end

      p50
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 50)
         end

      p55
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 55)
         end

      p60
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 60)
         end

      p65
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 65)
         end

      p70
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 70)
         end

      p75
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 75)
         end

      p80
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 80)
         end

      p85
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 85)
         end

      p90
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 90)
         end

      p95
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 95)
         end

      p100
         begin
         set_e_value(db_address(int(e1) + real_offset -1), src, 100)
         end

      default
         begin
         end
   set invalid valve_open_panel
   end


! CONTROL MENU !

just=centrecentre

x=0 y=0
w=70 h=110
set rect stand_control_menu 
set title stand_control_menu = "Control Menu"

set empty stand_control_menu

! DRAW VALVE !

bg=valve_bg
fg=valve_fg
just = centrecentre
rect (w=70,h=110,fg=bg)
x -= 35 y += 55 add
y -= 110 add
x += 70 add line (fg=decorlight) clear 
y += 1 add
y += 109 add
x -= 70 add line (fg=decorshadow) clear
x += 35 y -= 55

if opened_ip.b_value and closed_ip.b_value == off then
   begin
   if rot_angle == "n" then
      begin
      lw=2
      y += 10 x += 6
      x -= 12 add
      x += 12 add 
      y += 10 x -=6 add
      y -= 10 x -=6 add
      fill clear
      x += 6 add
      y -= 20 add
      line clear
      x += 6 add
      x -= 12 add 
      y -= 11 x +=6 add
      y += 11 x +=6 add
      fill clear
      lw=4
      x -= 6 y += 9 
      circle (w=42,h=42)
      y -= 40
      end
   else if rot_angle == "y" then
      begin
      x += 10 y += 6
      lw=2
      y -= 12 add
      y += 12 add 
      x += 10 y -=6 add
      x -= 10 y -=6 add
      fill clear
      y += 6 add
      x -= 20 add
      line clear
      y += 6 add
      y -= 12 add 
      x -= 11 y +=6 add
      x += 11 y +=6 add
      fill clear
      lw=4
      y -= 7 x += 10 
      circle (w=42,h=42)
      y -= 40
      end

   ch =20
   tfg = black
   text (ident)
   ch =16
   y += 72 text ("OPENED")
   ch = 20
   y += 15 text (int(real_percent_ip.e_value)+"%")
   clear

   if plca_comms_ip.b_value==0 or
      plcb_comms_ip.b_value==0 then
      set add stand_control_menu = "Control Valve"
   
   set add stand_control_menu = "Alter Tagged Message"
   set add stand_control_menu = "Clear Tagged Message"
   set add stand_control_menu = "Alter Transfer of Service"

   end

else if opened_ip.b_value == off and closed_ip.b_value then
   begin

   if rot_angle == "y" then
      begin
      lw=2
      y += 10 x += 6
      x -= 12 add
      x += 12 add 
      y += 10 x -=6 add
      y -= 10 x -=6 add
      fill clear
      x += 6 add
      y -= 20 add
      line clear
      x += 6 add
      x -= 12 add 
      y -= 11 x +=6 add
      y += 11 x +=6 add
      fill clear
      lw=4
      x -= 6 y += 9 
      circle (w=42,h=42)
      y -= 40
      end
   else if rot_angle == "n" then
      begin
      x += 10 y += 6
      lw=2
      y -= 12 add
      y += 12 add 
      x += 10 y -=6 add
      x -= 10 y -=6 add
      fill clear
      y += 6 add
      x -= 20 add
      line clear
      y += 6 add
      y -= 12 add 
      x -= 11 y +=6 add
      x += 11 y +=6 add
      fill clear
      lw=4
      y -= 7 x += 10 
      circle (w=42,h=42)
      y -= 40
      end

   ch =20
   tfg = black
   text (ident)
   ch =16
   y += 72 text ("CLOSED")
   ch = 20
   y += 16 text (int(real_percent_ip.e_value)+"%")


   if plca_comms_ip.b_value==0 or
      plcb_comms_ip.b_value==0 then
      set add stand_control_menu = "Control Valve"
   
   set add stand_control_menu = "Alter Tagged Message"
   set add stand_control_menu = "Clear Tagged Message"
   set add stand_control_menu = "Alter Transfer of Service"

   end

else if opened_ip.b_value == off and closed_ip.b_value == off then
   begin
   lw = 1
   x += 13 y -= 13 
   x -= 8 add
   x += 8 y += 8 add 
   y -= 8 add 
   x -= 8 add fill clear
   lw=2
   x += 4 y += 4 add
   x -= 18 y += 18 add line clear
   lw =2
   x -= 4 y-= 5 add
   y += 9 add 
   x += 9 add 
   y -= 11 x -= 11 add
   fill clear
   y -= 3 x += 15 
   lw=4
   circle (w=42,h=42)
   y -= 40
   ch =20
   tfg = black
   text (ident)
   ch =20
   y += 78 text (int(real_percent_ip.e_value)+"%")
   clear


   if plca_comms_ip.b_value==0 or
      plcb_comms_ip.b_value==0 then
      set add stand_control_menu = "Control Valve"
   
   set add stand_control_menu = "Alter Tagged Message"
   set add stand_control_menu = "Clear Tagged Message"
   set add stand_control_menu = "Alter Transfer of Service"
   end

else if opened_ip.b_value and closed_ip.b_value then
   begin
   lw=4
   x += 10 y += 6
   y -= 7 x -= 10 
   circle (w=42,h=42)
   ch = 30 
   text ("?")
   y -= 40
   ch =20
   tfg = black
   text (ident)
   ch =20
   y += 78 text ("ERROR")
   clear


   if plca_comms_ip.b_value==0 or
      plcb_comms_ip.b_value==0 then
      set add stand_control_menu = "Control Valve"

   set add stand_control_menu = "Alter Tagged Message"
   set add stand_control_menu = "Clear Tagged Message"
   set add stand_control_menu = "Alter Transfer of Service"
   end


! TAG MESSAGE BOX !

x=0 y=0
w=70 h=110
if selb and tag_message_ip.c_value <> "" then
   begin
   message_text_box(tag_message_ip.c_value)
   end
end


object main_object (bg,fg,w,h,tbg,tfg,just)
begin

x = 100 test_var_pmv (15000,15535,777,1083,15788,heathrow,"y","MV 13")

end

mimic = main_object w=400,h=240,just=centrecentre,fg=white,bg=decoroff,resizable
