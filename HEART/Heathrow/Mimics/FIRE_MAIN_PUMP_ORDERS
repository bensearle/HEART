! HEATHROW CMS - FIRE MAIN PUMP ORDERS

loaded by: FIRE_MAIN
!

load mimic_libutil

type e_db_row_type =  db_elements(db_addr,e_value)

type b_db_row_type =  db_elements(db_addr,b_value)

type electric_type = enum (el1="1 2 3 4 5 6 7",
                       el2="2 3 4 5 6 7 1",
                       el3="3 4 5 6 7 1 2",
                       el4="4 5 6 7 1 2 3",
                       el5="5 6 7 1 2 3 4",
                       el6="6 7 1 2 3 4 5",
                       el7="7 1 2 3 4 5 6",
                       eln="none")

type diesel_type = enum (d8="8 9 10",d9="9 10 8",d10="10 8 9",dn="none")


!
 ***********************************************************************
 **  SCOPE_CMD                                                        **
 ** Write Command to Alarm Banner Command Line                        **
 ***********************************************************************
!

object scope_cmd (cmd = string (80))

var top = toplevel  string (80)

begin
set existing top
set mimic top = "ALARM_BANNER_UTIL"
set p1 top = ""
set p2 top = cmd
request top
end


!
******************************************************************
* SET B VALUE                                                    *
* This object writes the value of a boolean to a given server. *
******************************************************************
!

 
 object set_b_value(db_addr=db_address,src=source,val=onoff)
 var op = output  b_db_row_type
 begin
 if not get busy op then
    begin
    set source op = src
    set default op
    set old_default op
    set value op.db_addr = db_addr
    set old_value op.db_addr = db_addr
    set value op.b_value = val
    set old_off op.b_value
    request op
    end
 end


!
******************************************************************
* SET E VALUE                                                    *
* This object writes the vaLue of a real from a given server.    *
******************************************************************
!

object set_e_value(db_addr=db_address,src=source,val=real)
var op = output e_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.e_value = val
   set old_off op.e_value
   request op
   end
end


! 
****************************************************************
* PUMP START ORDERS OBJECT                                     *
* this object is called by the Top Level variable (mimic)      *
****************************************************************
!

object pump_start_orders(comms_fail=int,inter_offset=int,pres_offset=int,ed_offset=int,src=source)

!E INPUTS
e_inputs[1] = electric_start_pump_ip
e_inputs[2] = diesel_start_pump_ip
!
var e_inputs = input e_db_row_type[2]

!B INPUTS
b_inputs[1] = press_123
b_inputs[2] = press_231
b_inputs[3] = press_312
!
var b_inputs = input b_db_row_type[3]

var in_demand_ip = input  b_db_row_type

!PLC INPUTS
plc_inputs[1] = plca_comms_ip
plc_inputs[2] = plcb_comms_ip
!
var plc_inputs = input b_db_row_type[2]

var items_added = loopback  int

var pporder = loopback  string
var elorder = loopback  string
var dorder = loopback  string

var pressure_start_pump = loopback int
var pressure_text = loopback string(20)
var electric_start_pump = loopback int
var electric_text = loopback electric_type
var diesel_start_pump = loopback int
var diesel_text = loopback diesel_type

var pressure_pump_menu = menu  string(80)
var electric_pump_menu = menu  string(80)
var diesel_pump_menu = menu  string(80)

begin

! INITIALISATION !
! REQUEST DATA FROM SERVER !

if invalid get source e_inputs then
   begin

   set source e_inputs = src
   set filter e_inputs.db_addr = lim_ge
   set limit e_inputs.db_addr = db_address(int(e1) + ed_offset-1)
   set priority e_inputs.db_addr = 15
   set persist e_inputs 
   set mayexist e_inputs
   request e_inputs

   set source b_inputs = src
   set filter b_inputs.db_addr = lim_eq
   set limit b_inputs.db_addr = db_address(int(b1) + pres_offset + 2)
   set priority b_inputs.db_addr = 15
   set persist b_inputs
   set mayexist b_inputs
   request b_inputs

   set source plc_inputs = src
   set filter plc_inputs.db_addr = lim_ge
   set limit plc_inputs.db_addr = db_address(int(b1) + comms_fail - 1)
   set priority plc_inputs.db_addr = 15
   set persist plc_inputs
   set mayexist plc_inputs
   request plc_inputs

   set source in_demand_ip = src
   set filter in_demand_ip.db_addr = lim_eq
   set limit  in_demand_ip.db_addr = db_address(int(b1) + inter_offset-1)
   set persist in_demand_ip 
   request in_demand_ip

   end


! CASE MENU OPTIONS !

if valid pressure_pump_menu then
   begin
   case pressure_pump_menu of

        "1 2 3"
        begin
        if in_demand_ip.b_value==off then
          set_b_value(db_address(int(b1) + pres_offset -1), src, on)
        end
 
        "2 3 1"
        begin
        if in_demand_ip.b_value==off then
          set_b_value(db_address(int(b1) + pres_offset + 0), src ,on)
        end
	
	"3 1 2"
	begin
	if in_demand_ip.b_value==off then
	  set_b_value(db_address(int(b1) + pres_offset + 1), src ,on)
	end   

        default begin end

   set invalid pressure_pump_menu
   end

if valid electric_pump_menu then
   begin
   case electric_pump_menu of

        "1 2 3 4 5 6 7"
        begin
        electric_start_pump=1
        end

        "2 3 4 5 6 7 1"
        begin
        electric_start_pump=2
        end

        "3 4 5 6 7 1 2"
        begin
        electric_start_pump=3
        end

        "4 5 6 7 1 2 3"
        begin
        electric_start_pump=4
        end

        "5 6 7 1 2 3 4"
        begin
        electric_start_pump=5
        end

        "6 7 1 2 3 4 5"
        begin
        electric_start_pump=6
        end

        "7 1 2 3 4 5 6"
        begin
        electric_start_pump=7
        end

        default begin end

    if in_demand_ip.b_value==off then
      set_e_value(db_address(int(e1) + ed_offset -1), src ,electric_start_pump)
    set invalid electric_pump_menu
    end

if valid diesel_pump_menu then
   begin
   case diesel_pump_menu of

        "8 9 10"
        begin
        diesel_start_pump=8
        end

        "9 10 8"
        begin
        diesel_start_pump=9
        end
 
        "10 8 9"
        begin
        diesel_start_pump=10
        end

        default begin end

   if in_demand_ip.b_value==off then
     set_e_value(db_address(int(e1) + ed_offset), src ,diesel_start_pump)
   set invalid diesel_pump_menu

   end


! CONFIGURE MENU !

just=centrecentre
x=0 y=-24
w=240 h=24
set rect pressure_pump_menu
set title pressure_pump_menu = "PRESSURE PUMP SEQUENCE"

set empty pressure_pump_menu

if plc_inputs[1].b_value == 0 or
   plc_inputs[2].b_value == 0 then
   begin

 if b_inputs[1].b_value then
     begin
     set add pressure_pump_menu = "2 3 1"
     set add pressure_pump_menu = "3 1 2"
     end
   
   else if b_inputs[2].b_value then
     begin
     set add pressure_pump_menu = "1 2 3"
     set add pressure_pump_menu = "3 1 2"
     end
   
   else if b_inputs[3].b_value then
     begin
     set add pressure_pump_menu = "1 2 3"
     set add pressure_pump_menu = "2 3 1"
     end

   else 
     begin
     set add pressure_pump_menu = "1 2 3"
     set add pressure_pump_menu = "2 3 1"
     set add pressure_pump_menu = "3 1 2"
     end


  end


if b_inputs[1].b_value then
  pporder="1 2 3"
else if b_inputs[2].b_value then
  pporder="2 3 1"
else if b_inputs[3].b_value then
  pporder="3 1 2"
else
  pporder="none"

just=centrecentre
x=0 y=1
w=240 h=22
set rect electric_pump_menu
set title electric_pump_menu = "ELECTRIC PUMP SEQUENCE"

set empty electric_pump_menu

if plc_inputs[1].b_value == 0 or
   plc_inputs[2].b_value == 0 then
   begin
   set add electric_pump_menu="1 2 3 4 5 6 7"
   set add electric_pump_menu="2 3 4 5 6 7 1"
   set add electric_pump_menu="3 4 5 6 7 1 2"
   set add electric_pump_menu="4 5 6 7 1 2 3"
   set add electric_pump_menu="5 6 7 1 2 3 4"
   set add electric_pump_menu="6 7 1 2 3 4 5"
   set add electric_pump_menu="7 1 2 3 4 5 6"
   end

case int(e_inputs[1].e_value) of
     
         1
         begin
         set remove electric_pump_menu="1 2 3 4 5 6 7"
         electric_text=el1
         end

         2
         begin
         set remove electric_pump_menu="2 3 4 5 6 7 1"
         electric_text=el2
         end

         3
         begin
         set remove electric_pump_menu="3 4 5 6 7 1 2"
         electric_text=el3
         end

         4
         begin
         set remove electric_pump_menu="4 5 6 7 1 2 3"
         electric_text=el4
         end


         5
         begin
         set remove electric_pump_menu="5 6 7 1 2 3 4"
         electric_text=el5
         end

         6
         begin
         set remove electric_pump_menu="6 7 1 2 3 4 5"
         electric_text=el6
         end

         7
         begin
         set remove electric_pump_menu="7 1 2 3 4 5 6"
         electric_text=el7
         end

         default
         begin
         electric_text=eln
         end
if in_demand_ip.b_value ==1 then
  begin
  set remove electric_pump_menu="1 2 3 4 5 6 7"
  set remove electric_pump_menu="2 3 4 5 6 7 1"
  set remove electric_pump_menu="3 4 5 6 7 1 2"
  set remove electric_pump_menu="4 5 6 7 1 2 3"
  set remove electric_pump_menu="5 6 7 1 2 3 4"
  set remove electric_pump_menu="6 7 1 2 3 4 5"
  set remove electric_pump_menu="7 1 2 3 4 5 6"
  set add electric_pump_menu="N/A WHILST ON DEMAND"
  end


just=centrecentre
x=0 y=24
w=240 h=22
set rect diesel_pump_menu
set title diesel_pump_menu = "DIESEL PUMP SEQUENCE"

set empty diesel_pump_menu

if plc_inputs[1].b_value == 0 or
   plc_inputs[2].b_value == 0 then
   begin
   set add diesel_pump_menu="8 9 10"
   set add diesel_pump_menu="9 10 8"
   set add diesel_pump_menu="10 8 9"
   end

case int(e_inputs[2].e_value) of
     
         8
         begin
         set remove diesel_pump_menu="8 9 10"
         diesel_text=d8
         end

         9
         begin
         set remove diesel_pump_menu="9 10 8"
         diesel_text=d9
         end

         10
         begin
         set remove diesel_pump_menu="10 8 9"
         diesel_text=d10
         end

         default 
         begin
         diesel_text=dn
         end
if in_demand_ip.b_value ==1 then
  begin
  set remove diesel_pump_menu="8 9 10"
  set remove diesel_pump_menu="9 10 8"
  set remove diesel_pump_menu="10 8 9"
  set add diesel_pump_menu="N/A WHILST ON DEMAND"
  end

! DRAW SYMBOL !

x=0 y=0
rect(w=240,h=70,fg=decoroff)
x-=120 y+=35 add
y-=70 add
x+= 240 add
line(lw=2,fg=decorlight)
clear
add
y+=70 add
x-=240 add
line(lw=2,fg=decorshadow)
clear

x=-120 y=-13 add
x+=240 add
line(lw=1,fg=decorshadow)
clear
y+=1 add
x-=240 add
line(lw=1,fg=decorlight)
clear

x=-120 y=11 add
x+=240 add
line(lw=1,fg=decorshadow)
clear
y+=1 add
x-=240 add
line(lw=1,fg=decorlight)
clear

ch=17
just=centreleft
x=-113 y=-44
text(tfg=white,"PUMP START SEQUENCE")
y=-22
text(tfg=black,"PRESSURISING ")
y+=23
text(tfg=red,"ELECTRIC")
y+=24
text(tfg=blue,"DIESEL")

y=-22
x=10
text(tfg=black,pporder)
y+=23
text(tfg=red,electric_text)
y+=24
text(tfg=blue,diesel_text)

end


object main_object (bg,fg,w,h,tbg,tfg)

begin
pump_start_orders(15000,15047,15750,1065,heathrow)
end

mimic = main_object w=300,h=240,just=centrecentre,fg=white,bg=black,resizable
