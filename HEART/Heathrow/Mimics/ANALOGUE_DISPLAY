! HEATHROW CMS - ANALOGUE DISPLAY

loaded by: POTABLE_WATER
!

load analogue_display_help

load mimic_libutil

type b_db_row_type =  db_elements(db_addr,b_value)

type e_alarm_row_type =  db_elements(db_addr,alarm_status)

type e_db_row_type =  db_elements(db_addr,e_value)

type e_test_row =  db_alarm_config(db_addr,
					   config_number,
					   test_value)

type e_test_table =  e_test_row[6]



!
************************************************************
* ANALOGUE DISPLAY OBJECT                                  *
* this object is called by the Top Level variable (mimic). *
************************************************************
!
object analogue_display(just,scale,plc_offset=int,ident=string,
                             unit=string,e_offset=int,src=source)

!PLC INPUTS
plc_inputs[1] = plca_comms_ip
plc_inputs[2] = plcb_comms_ip
!
var plc_inputs = input b_db_row_type[2]

var items_added = loopback  int

var temp_level_alarm = input  e_alarm_row_type
var temp_value_ip = input  e_db_row_type
var input_setpoint = input  e_test_table
var output_setpoint = output  e_test_table

var sensor_bg = loopback  colour
var temp_sps = loopback  string

var temp_menu = menu  string
var high_setpoint_panel = panel  int
var low_setpoint_panel = panel  int
var sym_width = loopback  int
var sym_text = loopback  string

var helpstr = help string(30)

begin

! INITIALISATION !
! REQUEST DATA FROM SERVER !
if invalid get source input_setpoint then 
   
   begin


   set source input_setpoint = src
   set filter input_setpoint.db_addr = lim_eq
   set limit input_setpoint.db_addr = db_address(int(e1) + e_offset - 1)
   set mayexist input_setpoint
   set mustexist input_setpoint.db_addr
   set mustexist input_setpoint.config_number
   set persist input_setpoint
   request input_setpoint

   set source temp_level_alarm = src
   set filter temp_level_alarm.db_addr = lim_eq
   set limit temp_level_alarm.db_addr = db_address(int(e1) + e_offset - 1)
   set persist temp_level_alarm
   request temp_level_alarm

   set source temp_value_ip = src
   set filter temp_value_ip.db_addr = lim_eq
   set limit temp_value_ip.db_addr = db_address(int(e1) + e_offset - 1)
   set persist temp_value_ip 
   request temp_value_ip

   set source plc_inputs = src
   set filter plc_inputs.db_addr = lim_ge
   set limit plc_inputs.db_addr = db_address(int(b1) + plc_offset - 1)
   set priority plc_inputs.db_addr = 15
   set persist plc_inputs
   set mayexist plc_inputs
   request plc_inputs

   set invalid input_setpoint
   end


! SELECT OBJECT BG COLOUR !
if temp_level_alarm.alarm_status == w_note then
   
   sensor_bg = flashred

else if temp_level_alarm.alarm_status == w_clr then

   sensor_bg = red

else sensor_bg = decoroff


! CASE MENU OPTIONS !
if valid temp_menu then
   begin

   case temp_menu of
        "Alter High Alarm Level"
            begin
            set title high_setpoint_panel = "Alter High Alarm Level"
            set unpinned high_setpoint_panel
            request high_setpoint_panel
            end

        "Alter Low Alarm Level"
            begin
            set title low_setpoint_panel = "Alter Low Alarm Level"
            set unpinned low_setpoint_panel
            request low_setpoint_panel
            end

        default
            begin
            end

   set invalid temp_menu
   end


! DRAW SYMBOL !

sym_text = ident+" "+int(temp_value_ip.e_value)+" "+unit
sym_width = length(sym_text)+20

rect(fg=sensor_bg,h=20,w=sym_width) 
x -= (sym_width/2) y += 10 add y -= 20 add x += sym_width add line(lw=1,fg=decorlight) clear
x = (sym_width/2) y = -10 add y += 20 add x -= sym_width add line(lw=1,fg=decorshadow) clear
x = 0 y = 0 text (tfg=black,ch=15,sym_text)


! CONFIGURE MENU !

if valid input_setpoint then
   temp_sps = "High = "+ int(input_setpoint[1].test_value) +
            "  Low = " + int(input_setpoint[2].test_value)

x=0 y=0

if plc_inputs[1].b_value==0 or
   plc_inputs[2].b_value==0 then
   begin
   w=sym_width 
   h=20
   end
else
   begin
   w=0 
   h=0
   end

set rect temp_menu
set title temp_menu = temp_sps

if invalid items_added then
   begin
   set add temp_menu   = "Alter High Alarm Level"
   set add temp_menu   = "Alter Low Alarm Level"
   items_added = 1
   end


! If VALID INPUT, WRITE TO SERVER !

if valid high_setpoint_panel and high_setpoint_panel > input_setpoint[2].test_value then
   begin
   set source output_setpoint = src
   set old_value output_setpoint = input_setpoint
   set value output_setpoint = input_setpoint
   set value output_setpoint[1].test_value = high_setpoint_panel
   request output_setpoint
   set invalid high_setpoint_panel
   end

if valid low_setpoint_panel and low_setpoint_panel < input_setpoint[1].test_value then 
   begin
   set source output_setpoint = src
   set old_value output_setpoint = input_setpoint
   set value output_setpoint = input_setpoint
   set value output_setpoint[2].test_value = low_setpoint_panel
   request output_setpoint
   set invalid low_setpoint_panel
   end

just = centrecentre
x = 0 y = 0
w = sym_width h = 20
set text helpstr = "ANALOGUE_DISPLAY_HELP"

end


object main_object (bg,fg,w,h,tbg,tfg,just)
begin
scale=250
just=centrecentre
x=200
y=70
analogue_display(15000,"","GPM",901,heathrow)
y+=30
analogue_display(15000,"","C",902,heathrow)
y+=30
analogue_display(15000,"","PSI",903,heathrow)
end

mimic = main_object w=400,h=250,just=centrecentre,fg=white,bg=white,resizable
