! HEATHROW CMS - PMV WITH GROUP ENABLE

loaded by: FIRE_MAIN
!

load mimic_libutil

type b_db_row_type =  db_elements(db_addr,b_value)

type c_db_row_type = db_elements(db_addr,c_value)

type alarm_row_type =  db_elements(db_addr,alarm_status)

type panel_item_row = table (str=string(20))


!
 ***********************************************************************
 **  SCOPE_CMD                                                        **
 ** Write Command to Alarm Banner Command Line                        **
 ***********************************************************************
!

object scope_cmd (cmd = string (80))

var top = toplevel  string (80)

begin
set existing top
set mimic top = "ALARM_BANNER_UTIL"
set p1 top = ""
set p2 top = cmd
request top
end


!
******************************************************************
* SET B VALUE                                                    *
* This object writes the value of a boolean to a given server. *
******************************************************************
!
object set_b_value(db_addr=db_address,src=source,val=onoff)
var output op=b_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.b_value = val
   set old_off op.b_value
   request op
   end
end

 
!
******************************************************************
* SET C VALUE                                                    *
* This object writes the vaLue of a char from a given server.    *
******************************************************************
!

object set_c_value(db_addr=db_address,src=source,val=string)
var op = output c_db_row_type
begin
if not get busy op then
   begin
   set source op = src
   set default op
   set old_default op
   set value op.db_addr = db_addr
   set old_value op.db_addr = db_addr
   set value op.c_value = val
   set old_off op.c_value
   request op
   end
end

!
***************************************
* MESSAGE TEXT                        *
* This object displays a tag message. *
***************************************
!

object mss_o(fg,bg,just,tag_mess=string)
begin
y=-10text ("*** Tag Message ***")
y=10 text (tag_mess)
end

mimic mss_m = mss_o just=centrecentre,w=300,h=50,bg=decoroff

object message_text_box(fg,bg,lw,just,tag_mess=string)
var mss = popup  mss_m
begin
set title mss= "Message"
request mss(tag_mess)
end

 
!
************************************************************
* PMV WITH GROUP ENABLE                                    *
* this object is called by the Top Level variable (mimic). *
************************************************************
!

object pmv_with_group_enable2_special(fg,bg,angle,plc_offset=int,group_offset=int,
               group_offset2=int,b_offset=int,c_offset=int,
           src=source,src2=source,rot_angle=string(1),ident=string)

! INPUTS!
VAR transfer_of_service_ip = input  b_db_row_type
VAR opened_ip = input  b_db_row_type
VAR closed_ip = input  b_db_row_type

VAR plca_comms_ip = input  b_db_row_type
VAR plcb_comms_ip = input  b_db_row_type
VAR group_remote = input  b_db_row_type
VAR group_local = input  b_db_row_type
VAR select_open = input b_db_row_type
VAR select_close = input b_db_row_type

VAR tag_message_ip = input  c_db_row_type

VAR opened_alarm_ip = input  alarm_row_type
VAR closed_alarm_ip = input  alarm_row_type
VAR mains_failed_alarm_ip = input  alarm_row_type
VAR failed_to_open_ip = input  alarm_row_type
VAR failed_to_close_ip = input  alarm_row_type

! LOOPBACKS !
VAR stand_bg = loopback  colour
VAR valve_fg = loopback  colour
VAR menu_count = loopback  int 
VAR already_done = loopback  yesno

! MENUS !
VAR stand_control_menu = menu  string(80)

! PANELS !
VAR tag_message_panel = panel  panel_item_row

begin

! INITIALISATION !
if invalid already_done then
  already_done=no

! REQUEST DATA FROM SERVER !

if invalid get source opened_ip then 
   begin

   set source transfer_of_service_ip = src
   set filter transfer_of_service_ip.db_addr = lim_eq
   set limit transfer_of_service_ip.db_addr = db_address(int(b1) + b_offset - 1)
   set persist transfer_of_service_ip 
   request transfer_of_service_ip

   set source opened_ip = src
   set filter opened_ip.db_addr = lim_eq
   set limit opened_ip.db_addr = db_address(int(b1) + b_offset)
   set persist opened_ip 
   request opened_ip

   set source closed_ip = src
   set filter closed_ip.db_addr = lim_eq
   set limit closed_ip.db_addr = db_address(int(b1) + b_offset + 1)
   set persist closed_ip 
   request closed_ip

   set source tag_message_ip = src
   set filter tag_message_ip.db_addr = lim_eq
   set limit tag_message_ip.db_addr = db_address(int(c1) + c_offset - 1)
   set persist tag_message_ip
   request tag_message_ip

   set source plca_comms_ip = src
   set filter plca_comms_ip.db_addr = lim_eq
   set limit plca_comms_ip.db_addr = db_address(int(b1) + plc_offset - 1)
   set persist plca_comms_ip 
   request plca_comms_ip

   set source plcb_comms_ip = src
   set filter plcb_comms_ip.db_addr = lim_eq
   set limit plcb_comms_ip.db_addr = db_address(int(b1) + plc_offset + 0)
   set persist plcb_comms_ip 
   request plcb_comms_ip

   set source group_remote = src
   set filter group_remote.db_addr = lim_eq
   set limit group_remote.db_addr = db_address(int(b1) + group_offset - 1)
   set persist group_remote 
   request group_remote

   set source group_local = src
   set filter group_local.db_addr = lim_eq
   set limit group_local.db_addr = db_address(int(b1) + group_offset + 0)
   set persist group_local 
   request group_local


   set source opened_alarm_ip = src
   set filter opened_alarm_ip.db_addr = lim_eq
   set limit opened_alarm_ip.db_addr = db_address(int(b1) + b_offset)
   set persist opened_alarm_ip 
   request opened_alarm_ip

   set source closed_alarm_ip = src
   set filter closed_alarm_ip.db_addr = lim_eq
   set limit closed_alarm_ip.db_addr = db_address(int(b1) + b_offset + 1)
   set persist closed_alarm_ip 
   request closed_alarm_ip

   set source mains_failed_alarm_ip = src
   set filter mains_failed_alarm_ip.db_addr = lim_eq
   set limit mains_failed_alarm_ip.db_addr = db_address(int(b1) + b_offset + 2)
   set persist mains_failed_alarm_ip 
   request mains_failed_alarm_ip

   set source failed_to_open_ip = src
   set filter failed_to_open_ip.db_addr = lim_eq
   set limit failed_to_open_ip.db_addr = db_address(int(b1) + b_offset + 3)
   set persist failed_to_open_ip 
   request failed_to_open_ip

   set source failed_to_close_ip = src
   set filter failed_to_close_ip.db_addr = lim_eq
   set limit failed_to_close_ip.db_addr = db_address(int(b1) + b_offset + 4)
   set persist failed_to_close_ip 
   request failed_to_close_ip
   
   set source select_open = src
   set filter select_open.db_addr = lim_eq
   set limit select_open.db_addr = db_address(int(b1) + b_offset + 5)
   set persist select_open
   request select_open

   set source select_close = src
   set filter select_close.db_addr = lim_eq
   set limit select_close.db_addr = db_address(int(b1) + b_offset + 6)
   set persist select_close
   request select_close

   end

! SELECT VALVE BG COLOUR ! 

if transfer_of_service_ip.b_value then
  stand_bg = orange

else if group_remote.b_value == on then
  stand_bg = lightblue
 
else if tag_message_ip.c_value <> "" then 
  stand_bg = yellow


else
  stand_bg = decoroff     


! SELECT VALVE FG COLOUR !

if plca_comms_ip.b_value and plcb_comms_ip.b_value then
  valve_fg = magenta

else if  opened_alarm_ip.alarm_status      == w_note or
        closed_alarm_ip.alarm_status       == w_note or
        mains_failed_alarm_ip.alarm_status == w_note or
        failed_to_open_ip.alarm_status     == w_note or
	failed_to_close_ip.alarm_status    == w_note then
        valve_fg = flashred

else if opened_alarm_ip.alarm_status       == w_clr or
        closed_alarm_ip.alarm_status       == w_clr or
        mains_failed_alarm_ip.alarm_status == w_clr or
	failed_to_open_ip.alarm_status     == w_clr or
	failed_to_close_ip.alarm_status    == w_clr then
        valve_fg = red

else if opened_ip.b_value and closed_ip.b_value==off then valve_fg=green4
else if closed_ip.b_value and opened_ip.b_value==off then valve_fg=white
else
   valve_fg = red


! TAG MESSAGE PANEL !

if valid tag_message_panel then
   begin
   set_c_value(db_address(int(c1) + c_offset -1),src,tag_message_panel.str)
   set invalid tag_message_panel
   end


! CONTROL MENU !

if valid stand_control_menu then
   begin
   case stand_control_menu of
      "Alter Tagged Message"
         begin
         set title tag_message_panel = "Modify Tag Message"
         set label tag_message_panel.str = "Tag Message :"
         set unpinned tag_message_panel
         request tag_message_panel
         end

      "Clear Tagged Message"
         begin
         set_c_value(db_address(int(c1) + c_offset - 1), src, "")
         end

      "Alter Transfer of Service"
         begin
         if transfer_of_service_ip.b_value then
            set_b_value(db_address(int(b1) + b_offset - 1), src, off)
         else
            set_b_value(db_address(int(b1) + b_offset - 1), src, on)
         end

       "Open Valve"
          begin
          set_b_value(db_address(int(b1) + b_offset +5), src, on)
          set_b_value(db_address(int(b1) + b_offset +6), src, off)
          end

       "Close Valve"
          begin
          set_b_value(db_address(int(b1) + b_offset +5), src, off)
          set_b_value(db_address(int(b1) + b_offset +6), src, on)
          end

        "Group Local Control"
          begin
          set_b_value(db_address(int(b1) + group_offset -1), src ,off)
          set_b_value(db_address(int(b1) + group_offset ), src ,on)
          set_b_value(db_address(int(b1) + group_offset2 -1), src2 ,off)
          set_b_value(db_address(int(b1) + group_offset2 ), src2 ,on)
          end

        "Group Remote Control"
          begin
          set_b_value(db_address(int(b1) + group_offset -1), src ,on)
          set_b_value(db_address(int(b1) + group_offset ), src ,off)
          set_b_value(db_address(int(b1) + group_offset2 -1), src2 ,on)
          set_b_value(db_address(int(b1) + group_offset2 ), src2 ,off)
          end

   default
      begin
      end
   set invalid stand_control_menu
   end


! CONTROL MENU !
just=centrecentre
w=70 h=95
set rect stand_control_menu 
set title stand_control_menu = "Control Menu"
set empty stand_control_menu 


! DRAW VALVE !

bg=stand_bg
fg=valve_fg
just = centrecentre

rect (w=70,h=110,fg=bg)
x -= 35 y += 55 add
y -= 110 add
x += 70 add line (fg=decorlight) clear 
y += 1 add
y += 109 add
x -= 70 add line (fg=decorshadow) clear
x += 35 y -= 55

if opened_ip.b_value and closed_ip.b_value == off then
   begin
   if rot_angle == "n" then
      begin
      lw=2
      y += 10 x += 6
      x -= 12 add
      x += 12 add 
      y += 10 x -=6 add
      y -= 10 x -=6 add
      fill clear
      x += 6 add
      y -= 20 add
      line clear
      x += 6 add
      x -= 12 add 
      y -= 11 x +=6 add
      y += 11 x +=6 add
      fill clear
      lw=4
      x -= 6 y += 9 
      circle (w=42,h=42)
      y -= 40
      end
   else if rot_angle == "y" then
      begin
      x += 10 y += 6
      lw=2
      y -= 12 add
      y += 12 add 
      x += 10 y -=6 add
      x -= 10 y -=6 add
      fill clear
      y += 6 add
      x -= 20 add
      line clear
      y += 6 add
      y -= 12 add 
      x -= 11 y +=6 add
      x += 11 y +=6 add
      fill clear
      lw=4
      y -= 7 x += 10 
      circle (w=42,h=42)
      y -= 40
      end

  
   ch = 20
   tfg = black
   text (ident)
   ch =16
   y += 78  text ("OPENED")
   clear
   set add stand_control_menu = "Alter Tagged Message"
   set add stand_control_menu = "Clear Tagged Message"
   set add stand_control_menu = "Alter Transfer of Service"

   if plca_comms_ip.b_value==0 or
      plcb_comms_ip.b_value==0 then
      set add stand_control_menu = "Close Valve"
   end

else if opened_ip.b_value == off and closed_ip.b_value then
   begin

   if rot_angle == "y" then
      begin
      lw=2
      y += 10 x += 6
      x -= 12 add
      x += 12 add 
      y += 10 x -=6 add
      y -= 10 x -=6 add
      fill clear
      x += 6 add
      y -= 20 add
      line clear
      x += 6 add
      x -= 12 add 
      y -= 11 x +=6 add
      y += 11 x +=6 add
      fill clear
      lw=4
      x -= 6 y += 9 
      circle (w=42,h=42)
      y -= 40
      end
   else if rot_angle == "n" then
      begin
      x += 10 y += 6
      lw=2
      y -= 12 add
      y += 12 add 
      x += 10 y -=6 add
      x -= 10 y -=6 add
      fill clear
      y += 6 add
      x -= 20 add
      line clear
      y += 6 add
      y -= 12 add 
      x -= 11 y +=6 add
      x += 11 y +=6 add
      fill clear
      lw=4
      y -= 7 x += 10 
      circle (w=42,h=42)
      y -= 40
      end

   ch =20
   tfg = black
   text (ident)
   ch =16
   y += 78 text ("CLOSED")
   set add stand_control_menu = "Alter Tagged Message"
   set add stand_control_menu = "Clear Tagged Message"
   set add stand_control_menu = "Alter Transfer of Service"
   
   if plca_comms_ip.b_value==0 or
      plcb_comms_ip.b_value==0 then
      set add stand_control_menu = "Open Valve"

   end

else if opened_ip.b_value and closed_ip.b_value then
   begin
   lw = 1
   x += 13 y -= 13 
   x -= 8 add
   x += 8 y += 8 add 
   y -= 8 add 
   x -= 8 add fill clear
   lw=2
   x += 4 y += 4 add
   x -= 18 y += 18 add line clear
   lw =2
   x -= 4 y-= 5 add
   y += 9 add 
   x += 9 add 
   y -= 11 x -= 11 add
   fill clear
   y -= 3 x += 15 
   lw=4
   circle (w=42,h=42)
   y -= 40
   ch =20
   tfg = black
   text (ident)
   ch =18
   y += 78  text ("TRAVEL")
   clear
   set add stand_control_menu = "Alter Tagged Message"
   set add stand_control_menu = "Clear Tagged Message"
   set add stand_control_menu = "Alter Transfer of Service"
   set add stand_control_menu = "Close Valve"
   set add stand_control_menu = "Open Valve" 

   end

else if opened_ip.b_value == off and closed_ip.b_value == off then
   begin
   lw=4
   x += 10 y += 6
   y -= 7 x -= 10 
   circle (w=42,h=42)
   ch = 30 
   text ("?")
   y -= 40
   
   ch =20
   tfg = black
   text (ident)
   ch =16
   y += 78  text ("ERROR")
   clear
   set add stand_control_menu = "Alter Tagged Message"
   set add stand_control_menu = "Clear Tagged Message"
   set add stand_control_menu = "Alter Transfer of Service"
   end


if plca_comms_ip.b_value==0 or
   plcb_comms_ip.b_value==0 then
   begin   

   if group_remote.b_value then
     set add stand_control_menu = "Group Local Control"

   else
     begin
     set add stand_control_menu = "Group Remote Control"
     set remove stand_control_menu = "Open Valve"
     set remove stand_control_menu = "Close Valve"
     end

   end

! if select button pressed then display tag message !

! TAG MESSAGE BOX !
X=0 Y=0
W=70 H=110
if selb and tag_message_ip.c_value <> "" then
   begin
   message_text_box(tag_message_ip.c_value)
   end


end

object main_object(bg,fg,just,angle)
 
begin

pmv_with_group_enable2_special(1,7300,15067,210,12,heathro2,heathrow,"n","MV 1")

end
mimic = main_object w = 225,h = 120,just = centrecentre, bg=decoroff
